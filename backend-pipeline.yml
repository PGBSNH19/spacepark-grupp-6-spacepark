# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# Only trigger when backend code has been pushed.
trigger:
  branches:
    include:
      - 'master'
  paths:
    include:
      - 'BackEnd/*'

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cce69a0c-b1d9-4f54-a6d0-666d6bea7ac1'
  imageRepository: 'spaceparkimage'
  containerRegistry: 'ovning2.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/BackEnd/DockerFile'
  tag: '$(Build.BuildId)'
  apiFolder: '$(Build.SourcesDirectory)/BackEnd/SpaceParkAPI'
  testFolder: '$(Build.SourcesDirectory)/BackEnd/SpaceParkUnitTest'

  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Builds our Web API and tests
      inputs:
        command: 'build'
        projects: |
          $(apiFolder)/spaceparkapi.csproj
          $(testFolder)/SpaceParkUnitTest.csproj
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'myResourceGroupConnection'
        KeyVaultName: 'spaceportvault'
        SecretsFilter: 'ConnectionStrings--AppDatabase'
        RunAsPreJob: true   
    - task: replacetokens@3
      inputs:
        targetFiles: '**/*.json'
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        verbosity: detailed
    - task: "DotNetCoreCLI@2"
      displayName: Run unit tests of the project
      inputs:
        command: test
        projects: $(testFolder) 
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
